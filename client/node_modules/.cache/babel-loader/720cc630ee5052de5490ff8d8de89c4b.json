{"ast":null,"code":"import _classCallCheck from \"/Users/christiaansimmons/Desktop/reactbooksearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christiaansimmons/Desktop/reactbooksearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christiaansimmons/Desktop/reactbooksearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christiaansimmons/Desktop/reactbooksearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christiaansimmons/Desktop/reactbooksearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christiaansimmons/Desktop/reactbooksearch/client/src/pages/Search.js\";\nimport React, { Component } from 'react';\nimport { withAlert } from 'react-alert';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport SearchForm from '../components/SearchForm';\nimport BookCard from '../components/BookCard'; // Function to format the book results as they are returned from the API.  Allows for a single component 'BookCard'\n// that can be used in both pages.\n\nvar formatBookResults = function formatBookResults(googleApiResults) {\n  var bookArray = [];\n  googleApiResults.map(function (book) {\n    var formattedBook = {\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors ? book.volumeInfo.authors : ['No Author Listed.'],\n      description: book.volumeInfo.description ? book.volumeInfo.description : 'No Description Listed.',\n      googleBookId: book.id,\n      thumbnail: book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/170px-No_image_available.svg.png',\n      link: book.volumeInfo.canonicalVolumeLink,\n      pageCount: book.volumeInfo.pageCount,\n      subtitle: book.volumeInfo.subtitle,\n      publishedDate: book.volumeInfo.publishedDate\n    };\n    bookArray.push(formattedBook);\n    return bookArray;\n  });\n  return bookArray;\n};\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: '',\n      results: [],\n      error: ''\n    };\n\n    _this.saveBook = function (event) {\n      var chosenBook = _this.state.results.find(function (book) {\n        return book.googleBookId === event.target.id;\n      });\n\n      var newSave = {\n        title: chosenBook.title,\n        authors: chosenBook.authors,\n        description: chosenBook.description,\n        googleBookId: chosenBook.googleBookId,\n        thumbnail: chosenBook.thumbnail,\n        link: chosenBook.link,\n        pageCount: chosenBook.pageCount,\n        subtitle: chosenBook.subtitle,\n        publishedDate: chosenBook.publishedDate\n      };\n      API.saveBook(newSave).then(function (res) {\n        console.log(res.status, res.statusText);\n\n        _this.props.alert.show('Book Saved!', {\n          type: 'success'\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.props.alert.show('Sorry, There was an issue with something back here...', {\n          type: 'error',\n          timeout: 5000\n        });\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault(); // console.log(`Search for: ${this.state.search}`);\n\n      API.getGoogleBooks(_this.state.search).then(function (res) {\n        var formattedArray = formatBookResults(res.data.items);\n\n        _this.setState({\n          results: formattedArray\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        title: \"Search for a Book!\",\n        image: \"http://getwallpapers.com/wallpaper/full/8/7/6/888655-download-free-library-background-images-1920x1200.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(SearchForm, {\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(BookCard, {\n        books: this.state.results,\n        buttonAction: this.saveBook,\n        buttonType: \"btn btn-success mt-2\",\n        buttonText: \"Save Book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component); // Exporting Component Utilizing the Alerts.\n\n\nexport default withAlert(Search);","map":{"version":3,"sources":["/Users/christiaansimmons/Desktop/reactbooksearch/client/src/pages/Search.js"],"names":["React","Component","withAlert","API","Jumbotron","SearchForm","BookCard","formatBookResults","googleApiResults","bookArray","map","book","formattedBook","title","volumeInfo","authors","description","googleBookId","id","thumbnail","imageLinks","link","canonicalVolumeLink","pageCount","subtitle","publishedDate","push","Search","state","search","results","error","saveBook","event","chosenBook","find","target","newSave","then","res","console","log","status","statusText","props","alert","show","type","catch","err","timeout","handleInputChange","setState","value","handleFormSubmit","preventDefault","getGoogleBooks","formattedArray","data","items"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withAlert} from 'react-alert';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport SearchForm from '../components/SearchForm';\nimport BookCard from '../components/BookCard';\n\n// Function to format the book results as they are returned from the API.  Allows for a single component 'BookCard'\n// that can be used in both pages.\nconst formatBookResults = googleApiResults => {\n  const bookArray = [];\n\n  googleApiResults.map(book => {\n\n    const formattedBook = {\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors\n        ? book.volumeInfo.authors\n        : ['No Author Listed.'],\n      description: book.volumeInfo.description\n        ? book.volumeInfo.description\n        : 'No Description Listed.',\n      googleBookId: book.id,\n      thumbnail: book.volumeInfo.imageLinks\n        ? book.volumeInfo.imageLinks.thumbnail\n        : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/170px-No_image_available.svg.png',\n      link: book.volumeInfo.canonicalVolumeLink,\n      pageCount: book.volumeInfo.pageCount,\n      subtitle: book.volumeInfo.subtitle,\n      publishedDate: book.volumeInfo.publishedDate\n    };\n\n    bookArray.push(formattedBook);\n    return bookArray\n  });\n  return bookArray;\n};\n\nclass Search extends Component {\n  state = {\n    search: '',\n    results: [],\n    error: ''\n  };\n\n  // Method for saving a particular book to the database.\n  saveBook = event => {\n\n    const chosenBook = this.state.results.find(book => book.googleBookId === event.target.id);\n\n    const newSave = {\n      title: chosenBook.title,\n      authors: chosenBook.authors,\n      description: chosenBook.description,\n      googleBookId: chosenBook.googleBookId,\n      thumbnail: chosenBook.thumbnail,\n      link: chosenBook.link,\n      pageCount: chosenBook.pageCount,\n      subtitle: chosenBook.subtitle,\n      publishedDate: chosenBook.publishedDate\n    };\n\n    API.saveBook(newSave)\n      .then(res => {\n        console.log(res.status, res.statusText);\n        this.props.alert.show('Book Saved!', {type: 'success'})\n      })\n      .catch(err => {\n        console.log(err);\n        this.props.alert.show('Sorry, There was an issue with something back here...', {\n          type: 'error',\n          timeout: 5000\n        })\n      })\n  };\n\n  // Method handling the change of the input field.\n  handleInputChange = event => {\n    this.setState({search: event.target.value})\n  };\n\n  // Method handling the submission of the Search form, makes a call to retrieve the results of the search\n  // from Google Books API.\n  handleFormSubmit = event => {\n    event.preventDefault();\n    // console.log(`Search for: ${this.state.search}`);\n    API.getGoogleBooks(this.state.search)\n      .then(res => {\n        const formattedArray = formatBookResults(res.data.items);\n        this.setState({results: formattedArray});\n      })\n      .catch(err => console.log(err))\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n\n        <Jumbotron\n          title=\"Search for a Book!\"\n          image=\"http://getwallpapers.com/wallpaper/full/8/7/6/888655-download-free-library-background-images-1920x1200.jpg\"\n        />\n        <SearchForm\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <BookCard\n          books={this.state.results}\n          buttonAction={this.saveBook}\n          buttonType=\"btn btn-success mt-2\"\n          buttonText=\"Save Book\"\n        />\n      </div>\n    );\n  }\n}\n\n// Exporting Component Utilizing the Alerts.\nexport default withAlert(Search);"]},"metadata":{},"sourceType":"module"}